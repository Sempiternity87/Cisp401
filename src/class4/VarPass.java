/*******************************************************************************
* VarPass.java
*===============================================================================
* @author Chadd Klaus
* @date   Feb 19, 2013
*******************************************************************************/
package class4;

/*******************************************************************************
* Var Pass
*******************************************************************************/
public class VarPass
  {
  /*****************************************************************************
  * main */
  /**
  * Driver
  *****************************************************************************/
  public static void main (String[] args)
    {
    /***************************************************************************
    * Properties
    ***************************************************************************/
    int x;
    k9  fifi;

    /*--------------------*/
    /* Test pass-by-value */
    /*--------------------*/
    x = 10;
    System.out.println(methodA(x) != x ? "a and x values are unchanged"
                                       : "x was replaced by value a");

    /*------------------------*/
    /* Test pass-by-reference */
    /*------------------------*/
    fifi = new k9();
    System.out.println(fifi.getBark());
    methodB(fifi);

    /*--------------------------------------------------*/
    /* Show whether Fifi's bark is worse than her bite. */
    /*--------------------------------------------------*/
    System.out.println(fifi.getBark().equals("Woof") ? "fifi.bark is unchanged"
                                                     : "fifi's bark has been altered!");
    System.out.printf("Fifi now makes a %s", fifi.getBark());
    }
  
  /*****************************************************************************
  * methodA */
  /**
  * Pass By Value.
  *****************************************************************************/
  public static int methodA(int a)
    {
    a = 5;
    return a;
    }
  
  /*****************************************************************************
  * methodB */
  /**
  * Pass By Reference
  *****************************************************************************/
  public static void methodB(k9 a)
    {
    a.bark = "yip, yip";
    }
  }

/*******************************************************************************
* Class: k9
*******************************************************************************/
class k9 extends VarPass
  {
  /*****************************************************************************
  * Properties
  *****************************************************************************/
  public String bark;

  /*-----------*/
  /* Accessors */
  /*-----------*/
  public String getBark() { return bark; }
  
  /*****************************************************************************
  * Constructor
  *****************************************************************************/
  public k9()
    {
    bark = "Woof";
    }
  }
